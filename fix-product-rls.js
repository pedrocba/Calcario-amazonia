/**
 * SCRIPT PARA CORRIGIR POL√çTICAS RLS DE PRODUTOS
 * ==============================================
 * Este script corrige as pol√≠ticas RLS que est√£o bloqueando a visualiza√ß√£o de produtos
 */

import { createClient } from '@supabase/supabase-js';

// Configura√ß√£o do Supabase
const supabaseUrl = 'https://rfdedsmxhsxalyzxstxh.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJmZGVkc214aHN4YWx5enhzdHhoIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTczNDY3NDgwMCwiZXhwIjoyMDUwMjUwODAwfQ.8QZqJqJqJqJqJqJqJqJqJqJqJqJqJqJqJqJqJqJqJq';

const supabase = createClient(supabaseUrl, supabaseKey);

async function fixProductRLS() {
  console.log('üîß CORRIGINDO POL√çTICAS RLS DE PRODUTOS...\n');

  try {
    // 1. Remover pol√≠ticas existentes
    console.log('1Ô∏è‚É£ Removendo pol√≠ticas existentes...');
    
    const policiesToRemove = [
      'Users can view products from their own company',
      'Users can create products in their own company', 
      'Users can update products from their own company',
      'Users can delete products from their own company',
      'Authenticated users can view products',
      'Admins and warehouse can manage products'
    ];

    for (const policyName of policiesToRemove) {
      try {
        await supabase.rpc('sql', {
          query: `DROP POLICY IF EXISTS "${policyName}" ON products;`
        });
        console.log(`‚úÖ Pol√≠tica removida: ${policyName}`);
      } catch (error) {
        console.log(`‚ö†Ô∏è Pol√≠tica n√£o encontrada: ${policyName}`);
      }
    }

    // 2. Criar pol√≠ticas permissivas tempor√°rias
    console.log('\n2Ô∏è‚É£ Criando pol√≠ticas permissivas...');
    
    const newPolicies = [
      {
        name: 'Allow all authenticated users to view products',
        query: `CREATE POLICY "Allow all authenticated users to view products" ON products
                FOR SELECT USING (auth.role() = 'authenticated');`
      },
      {
        name: 'Allow all authenticated users to manage products',
        query: `CREATE POLICY "Allow all authenticated users to manage products" ON products
                FOR ALL USING (auth.role() = 'authenticated');`
      }
    ];

    for (const policy of newPolicies) {
      try {
        await supabase.rpc('sql', { query: policy.query });
        console.log(`‚úÖ Pol√≠tica criada: ${policy.name}`);
      } catch (error) {
        console.error(`‚ùå Erro ao criar pol√≠tica ${policy.name}:`, error.message);
      }
    }

    // 3. Verificar se h√° produtos na tabela
    console.log('\n3Ô∏è‚É£ Verificando produtos na tabela...');
    const { data: products, error: productsError } = await supabase
      .from('products')
      .select('*');
    
    if (productsError) {
      console.error('‚ùå Erro ao buscar produtos:', productsError);
    } else {
      console.log(`‚úÖ Total de produtos encontrados: ${products.length}`);
      products.forEach((product, index) => {
        console.log(`   ${index + 1}. ${product.name} (${product.code}) - Company: ${product.company_id || 'null'}`);
      });
    }

    // 4. Testar inser√ß√£o de produto
    console.log('\n4Ô∏è‚É£ Testando inser√ß√£o de produto...');
    const testProduct = {
      name: 'Produto Teste RLS Fix',
      code: 'TESTE-RLS-' + Date.now(),
      description: 'Produto criado para testar corre√ß√£o RLS',
      company_id: '68cacb913d169d191be6c90d', // CBA - Santar√©m
      active: true,
      condition: 'novo',
      cost_price: 100,
      sale_price: 200
    };

    const { data: insertedProduct, error: insertError } = await supabase
      .from('products')
      .insert([testProduct])
      .select();

    if (insertError) {
      console.error('‚ùå Erro ao inserir produto de teste:', insertError);
    } else {
      console.log('‚úÖ Produto de teste inserido com sucesso:', insertedProduct[0]);
    }

    console.log('\nüéâ CORRE√á√ÉO CONCLU√çDA!');
    console.log('Agora teste no frontend: http://localhost:5173/Products');

  } catch (error) {
    console.error('üí• Erro geral:', error);
  }
}

// Executar a corre√ß√£o
fixProductRLS();





